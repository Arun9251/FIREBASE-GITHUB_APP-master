{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aruns\\\\Desktop\\\\react20\\\\FIREBASE-GITHUB_APP-master\\\\src\\\\layout\\\\Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavLink, NavItem, NavbarText } from \"reactstrap\";\nimport { Link } from \"react-router-dom\"; //for clicking here and there\n\nimport { UserContext } from \"../context/UserContext\";\n\nconst Header = () => {\n  _s();\n\n  var _context$user;\n\n  const context = useContext(UserContext); //this state is for toggling bar\n\n  const [isOpen, setIsOpen] = useState(false); //for flipping switching on/off\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return /*#__PURE__*/React.createElement(Navbar, {\n    color: \"info\",\n    light: true,\n    expand: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NavbarBrand, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    className: \"text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, \"LCO gitfire app\")), /*#__PURE__*/React.createElement(NavbarText, {\n    className: \"text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, ((_context$user = context.user) === null || _context$user === void 0 ? void 0 : _context$user.email) ? context.user.email : \"\"), /*#__PURE__*/React.createElement(NavbarToggler, {\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Collapse, {\n    isOpen: isOpen,\n    navbar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    className: \"ml-auto\",\n    navbar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, context.user ? /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    onClick: () => {\n      context.setUser(null);\n    },\n    className: \"text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Logout\")) : /*#__PURE__*/React.createElement(React.Fragment, null, \" \", /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 32\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    tag: Link,\n    to: \"/signup\",\n    className: \"text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"Signup\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    tag: Link,\n    to: \"/signin\",\n    className: \"text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Signin\")), \" \"))));\n};\n\n_s(Header, \"ftZv6NAQieeY0OYDV+y+FIGgXkY=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/Users/aruns/Desktop/react20/FIREBASE-GITHUB_APP-master/src/layout/Header.js"],"names":["React","useState","useContext","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavLink","NavItem","NavbarText","Link","UserContext","Header","context","isOpen","setIsOpen","toggle","user","email","setUser"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,UAAvB,QAAwC,OAAxC;AACA,SACIC,QADJ,EAEIC,MAFJ,EAGIC,aAHJ,EAIIC,WAJJ,EAKIC,GALJ,EAMIC,OANJ,EAOIC,OAPJ,EAQIC,UARJ,QASO,YATP;AAWA,SAAQC,IAAR,QAAmB,kBAAnB,C,CAAsC;;AAEtC,SAAQC,WAAR,QAA0B,wBAA1B;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAAA;;AACjB,QAAMC,OAAO,GAAGZ,UAAU,CAACU,WAAD,CAA1B,CADiB,CAGjB;;AACA,QAAK,CAACG,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,KAAD,CAAnC,CAJiB,CAKnB;;AAEE,QAAMgB,MAAM,GAAG,MAAMD,SAAS,CAAC,CAACD,MAAF,CAA9B;;AAEJ,sBACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAG,MAAhB;AAAuB,IAAA,KAAK,MAA5B;AAA6B,IAAA,MAAM,EAAG,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,GAAX;AAAe,IAAA,SAAS,EAAG,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,CADA,eAGA,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAE,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,kBAAAD,OAAO,CAACI,IAAR,gEAAcC,KAAd,IAAsBL,OAAO,CAACI,IAAR,CAAaC,KAAnC,GAA2C,EAD/C,CAHA,eAMA,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAIF,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANA,eAOA,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEF,MAAlB;AAA0B,IAAA,MAAM,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAG,SAAjB;AAA2B,IAAA,MAAM,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEID,OAAO,CAACI,IAAR,gBAAiB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACb,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAI,MAAM;AAACJ,MAAAA,OAAO,CAACM,OAAR,CAAgB,IAAhB;AAAsB,KAAjD;AAAmD,IAAA,SAAS,EAAG,YAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADa,CAAjB,gBAKoB,4DAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACf,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAIT,IAAhB;AAAsB,IAAA,EAAE,EAAG,SAA3B;AAAoC,IAAA,SAAS,EAAG,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADe,CAAH,eAMZ,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAIA,IAAhB;AAAsB,IAAA,EAAE,EAAG,SAA3B;AAAqC,IAAA,SAAS,EAAG,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,CANY,MAPxB,CADA,CAPA,CADJ;AAoCC,CA7CD;;GAAME,M;;KAAAA,M;AA+CN,eAAeA,MAAf","sourcesContent":["import React,{useState,useContext} from \"react\"\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavLink,\r\n    NavItem,\r\n    NavbarText\r\n} from \"reactstrap\"\r\n\r\nimport {Link} from \"react-router-dom\" //for clicking here and there\r\n\r\nimport {UserContext} from \"../context/UserContext\"\r\n\r\nconst Header = () => {\r\n    const context = useContext(UserContext)\r\n\r\n    //this state is for toggling bar\r\n    const[isOpen, setIsOpen] = useState(false)\r\n  //for flipping switching on/off\r\n   \r\n    const toggle = () => setIsOpen(!isOpen)\r\n\r\nreturn(\r\n    <Navbar color = \"info\" light expand = \"md\">\r\n    <NavbarBrand>\r\n    <Link to = \"/\" className = \"text-white\">LCO gitfire app</Link></NavbarBrand>\r\n    <NavbarText className= \"text-white\">{\r\n        context.user?.email ? context.user.email : \"\"}\r\n    </NavbarText>\r\n    <NavbarToggler onClick = {toggle}/>\r\n    <Collapse isOpen={isOpen} navbar>\r\n    <Nav className = \"ml-auto\" navbar>\r\n    {\r\n        context.user ? ( <NavItem>\r\n            <NavLink onClick = {() => {context.setUser(null)}} className = \"text-white\">\r\n            Logout\r\n            \r\n            </NavLink>\r\n            </NavItem>) : ( <> <NavItem>\r\n                <NavLink tag = {Link} to = \"/signup\"className = \"text-white\">\r\n                Signup\r\n                \r\n                </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                <NavLink tag = {Link} to = \"/signin\" className = \"text-white\">\r\n                Signin\r\n                \r\n                </NavLink>\r\n                </NavItem> </> ) \r\n    }\r\n   \r\n   \r\n    </Nav>\r\n    </Collapse>\r\n    </Navbar>\r\n)\r\n\r\n}\r\n\r\nexport default Header;"]},"metadata":{},"sourceType":"module"}