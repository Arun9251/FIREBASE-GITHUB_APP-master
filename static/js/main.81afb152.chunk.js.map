{"version":3,"sources":["logo.svg","Components/UserCard.js","Components/Repos.js","context/UserContext.js","Pages/Home.js","Pages/Signin.js","Pages/Signup.js","Pages/PageNotFound.js","layout/Footer.js","layout/Header.js","App.js","Config/FirebaseConfig.js","serviceWorker.js","index.js"],"names":["UserCard","user","Card","className","src","avatar_url","CardBody","name","location","bio","hireable","followers","Repos","repos_url","useState","repos","setRepos","fetchRepos","a","Axios","get","data","useEffect","ListGroup","map","repo","ListGroupItem","key","id","language","description","UserContext","createContext","Home","context","useContext","query","setQuery","setUser","fetchDetails","toast","type","uid","Container","Row","Col","md","InputGroup","Input","value","onChange","e","target","placeholder","InputGroupAddon","addonType","Button","onClick","color","to","Signup","email","setEmail","password","setPassword","lg","Form","onSubmit","preventDefault","firebase","auth","signInWithEmailAndPassword","then","res","console","log","catch","error","message","CardHeader","FormGroup","row","Label","for","sm","CardFooter","block","createUserWithEmailAndPassword","PageNotFound","Footer","fluid","tag","Header","isOpen","setIsOpen","Navbar","light","expand","NavbarBrand","NavbarText","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","Link","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","Provider","exact","path","component","Signin","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.81afb152.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from \"react\"\r\nimport {Card, CardBody} from \"reactstrap\"\r\n\r\n\r\nconst UserCard = ({user}) => {\r\nreturn(\r\n    <Card className = \"text-center mt-3 mt-4\">\r\n    <img src = {user.avatar_url} className = \"img-thumbnail\" />\r\n\r\n    <CardBody>\r\n    <div className= \"text-primary\">{user.name}</div>\r\n    <div className= \"text-primary\">{user.location}</div>\r\n    <div className= \"text-primary\">{user.bio}</div>\r\n    <div className= \"text-info\">Available for Hire:{user.hireable ? 'YES' : 'NOPE'}</div>\r\n    <div className= \"text-info\">Followers:{user.followers ? 'YES' : 'NOPE'}</div>\r\n    </CardBody>\r\n    </Card>\r\n)\r\n}\r\n\r\nexport default UserCard;","import React,{useState, useEffect} from \"react\"\r\nimport Axios from \"axios\"\r\nimport {ListGroup, ListGroupItem} from \"reactstrap\"\r\n\r\n\r\nconst Repos = ({repos_url}) => {\r\n   \r\n\r\n   const [repos, setRepos] = useState([])\r\n    \r\n    const fetchRepos = async () => {\r\n    const {data} = await Axios.get(repos_url)\r\n    setRepos(data)\r\n}\r\n\r\n  useEffect (() => {\r\n      fetchRepos()\r\n  }, [repos_url])\r\n  \r\n   return(\r\n       <ListGroup>\r\n       {repos.map(repo => (\r\n           <ListGroupItem key = {repo.id}>\r\n           <div className = \"text-primary\">{repo.name}</div>\r\n           <div className = \"text-primary\">{repo.language}</div>\r\n           <div className = \"text-info\">{repo.description}</div>\r\n           </ListGroupItem>\r\n       ))}\r\n       \r\n       </ListGroup>\r\n   )\r\n\r\n}\r\n\r\nexport default Repos;","import {createContext} from \"react\"\r\n\r\nexport const UserContext = createContext();","import React, { useState, useContext } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nimport {\r\n  Row,\r\n  Container,\r\n  Col,\r\n  Input,\r\n  Button,\r\n  InputGroup,\r\n  InputGroupAddon\r\n} from \"reactstrap\";\r\n\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Repos from \"../Components/Repos\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { UserContext } from \"../context/UserContext\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n\r\nconst Home = () => {\r\n\r\n   const context = useContext(UserContext)\r\n   const[query, setQuery] = useState('')\r\n   const [user, setUser] = useState(null)\r\n\r\n   const fetchDetails = async () => {\r\n       try {\r\n           const {data} = await Axios.get(`https://api.github.com/users/${query}`)\r\n           setUser(data)\r\n       } catch (eror) {\r\n           toast(\"Not able to locate user\",{type: \"error\"})\r\n           \r\n       }\r\n   }\r\n\r\n//PUT ANY PAGE BEHIND LOGIN\r\n\r\nif (!context.user?.uid) {\r\n    return <Redirect to=\"/signin\"/>\r\n}\r\n\r\n   return (\r\n    <Container>\r\n      <Row className=\" mt-3\">\r\n        <Col md=\"5\">\r\n          <InputGroup>\r\n            <Input\r\n              type=\"text\"\r\n              value={query}\r\n              onChange = {e => setQuery(e.target.value)}\r\n              placeholder=\"Please provide the username\"\r\n            />\r\n            <InputGroupAddon addonType=\"append\">\r\n              <Button onClick = {fetchDetails} color=\"primary\">Fetch User</Button>\r\n            </InputGroupAddon>\r\n          </InputGroup>\r\n          { user ? <UserCard user = {user}/>: null }\r\n        </Col>\r\n        <Col md=\"7\">{user ? <Repos repos_url={user.repos_url}/>: null}</Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n\r\n}\r\n\r\nexport default Home;","import React, { useState, useContext } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  Button,\r\n  FormGroup,\r\n  Label,\r\n  Col,\r\n  Input,\r\n  Row,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  CardHeader\r\n} from \"reactstrap\";\r\n\r\nimport firebase from \"firebase/app\";\r\nimport { UserContext } from \"../context/UserContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Signup = () => {\r\n  const context = useContext(UserContext);\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleSignUp = () => {\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(res => {\r\n        console.log(res);\r\n        context.setUser({ email: res.user.email, uid: res.user.uid });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        toast(error.message, {\r\n          type: \"error\"\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    handleSignUp();\r\n  };\r\n\r\n  if (context.user?.uid) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <Container className=\"text-center\">\r\n      <Row>\r\n        <Col lg={6} className=\"offset-lg-3 mt-5\">\r\n          <Card>\r\n            <Form onSubmit={handleSubmit}>\r\n              <CardHeader className=\"\">Signin here</CardHeader>\r\n              <CardBody>\r\n                <FormGroup row>\r\n                  <Label for=\"email\" sm={3}>\r\n                    Email\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      id=\"email\"\r\n                      placeholder=\"provide your email\"\r\n                      value={email}\r\n                      onChange={e => setEmail(e.target.value)}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for=\"password\" sm={3}>\r\n                    Password\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"password\"\r\n                      placeholder=\"your password here\"\r\n                      value={password}\r\n                      onChange={e => setPassword(e.target.value)}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n              </CardBody>\r\n              <CardFooter>\r\n                <Button type=\"submit\" block color=\"primary\">\r\n                  Sign In\r\n                </Button>\r\n              </CardFooter>\r\n            </Form>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n ","import React, { useState, useContext } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  Button,\r\n  FormGroup,\r\n  Label,\r\n  Col,\r\n  Input,\r\n  Row,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  CardHeader\r\n} from \"reactstrap\";\r\n\r\nimport firebase from \"firebase/app\";\r\nimport { UserContext } from \"../context/UserContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Signup = () => {\r\n  const context = useContext(UserContext);\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleSignUp = () => {\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(res => {\r\n        console.log(res);\r\n        context.setUser({ email: res.user.email, uid: res.user.uid });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        toast(error.message, {\r\n          type: \"error\"\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    handleSignUp();\r\n  };\r\n\r\n  if (context.user?.uid) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <Container className=\"text-center\">\r\n      <Row>\r\n        <Col lg={6} className=\"offset-lg-3 mt-5\">\r\n          <Card>\r\n            <Form onSubmit={handleSubmit}>\r\n              <CardHeader className=\"\">Signup here</CardHeader>\r\n              <CardBody>\r\n                <FormGroup row>\r\n                  <Label for=\"email\" sm={3}>\r\n                    Email\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      id=\"email\"\r\n                      placeholder=\"provide your email\"\r\n                      value={email}\r\n                      onChange={e => setEmail(e.target.value)}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label for=\"password\" sm={3}>\r\n                    Password\r\n                  </Label>\r\n                  <Col sm={9}>\r\n                    <Input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"password\"\r\n                      placeholder=\"your password here\"\r\n                      value={password}\r\n                      onChange={e => setPassword(e.target.value)}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n              </CardBody>\r\n              <CardFooter>\r\n                <Button type=\"submit\" block color=\"primary\">\r\n                  Sign Up\r\n                </Button>\r\n              </CardFooter>\r\n            </Form>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React from \"react\"\r\n\r\nconst PageNotFound = () => {\r\nreturn(\r\n    <div>\r\n    \r\n    <h1>\r\n    PageNotFound Page      \r\n    </h1></div>\r\n)\r\n}\r\n\r\nexport default PageNotFound;","import React from \"react\"\r\nimport {Container} from \"reactstrap\"\r\n\r\n\r\nconst Footer = () => {return (\r\n    <Container \r\n    fluid\r\n    tag = \"footer\"\r\n    className = \"text-center bg-info text-white text-uppercase fixed-bottom pd-3\">\r\n    \r\n    LCO Github search app with firebase\r\n    \r\n    </Container>\r\n)\r\n\r\n}\r\n\r\nexport default Footer;","import React,{useState,useContext} from \"react\"\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavLink,\r\n    NavItem,\r\n    NavbarText\r\n} from \"reactstrap\"\r\n\r\nimport {Link} from \"react-router-dom\" //for clicking here and there\r\n\r\nimport {UserContext} from \"../context/UserContext\"\r\n\r\nconst Header = () => {\r\n    const context = useContext(UserContext)\r\n\r\n    //this state is for toggling bar\r\n    const[isOpen, setIsOpen] = useState(false)\r\n  //for flipping switching on/off\r\n   \r\n    const toggle = () => setIsOpen(!isOpen)\r\n\r\nreturn(\r\n    <Navbar color = \"info\" light expand = \"md\">\r\n    <NavbarBrand>\r\n    <Link to = \"/\" className = \"text-white\">LCO gitfire app</Link></NavbarBrand>\r\n    <NavbarText className= \"text-white\">{\r\n        context.user?.email ? context.user.email : \"\"}\r\n    </NavbarText>\r\n    <NavbarToggler onClick = {toggle}/>\r\n    <Collapse isOpen={isOpen} navbar>\r\n    <Nav className = \"ml-auto\" navbar>\r\n    {\r\n        context.user ? ( <NavItem>\r\n            <NavLink onClick = {() => {context.setUser(null)}} className = \"text-white\">\r\n            Logout\r\n            \r\n            </NavLink>\r\n            </NavItem>) : ( <> <NavItem>\r\n                <NavLink tag = {Link} to = \"/signup\"className = \"text-white\">\r\n                Signup\r\n                \r\n                </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                <NavLink tag = {Link} to = \"/signin\" className = \"text-white\">\r\n                Signin\r\n                \r\n                </NavLink>\r\n                </NavItem> </> ) \r\n    }\r\n   \r\n   \r\n    </Nav>\r\n    </Collapse>\r\n    </Navbar>\r\n)\r\n\r\n}\r\n\r\nexport default Header;","import React,{useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\n//react-router\nimport {BrowserRouter as Router,Switch,Route, Link} from \"react-router-dom\"\n\nimport {ToastContainer} from \"react-toastify\"\nimport \"react-toastify/dist/ReactToastify.min.css\"\n\n//firebase\nimport firebase from \"firebase/app\"\nimport \"firebase/auth\"\n\n//components\n\nimport Home from \"./Pages/Home\"\nimport Signin from \"./Pages/Signin\"\nimport Signup from \"./Pages/Signup\"\nimport PageNotFound from \"./Pages/PageNotFound\"\nimport { UserContext } from './context/UserContext';\nimport Footer from './layout/Footer';\nimport Header from './layout/Header';\n\nimport firebaseConfig from \"./Config/FirebaseConfig\"\n//init firebase\nfirebase.initializeApp(firebaseConfig)\n\n\nconst App = () => {\n\n   const[user ,setUser] = useState(null) //if null is not there then it will not be checking wheather the user is authenticate or not\n\n  return (\n   <Router>\n   <ToastContainer/>\n   <UserContext.Provider value = {{user,setUser}}>\n   <Header/>\n   <Switch>\n     <Route exact path = \"/\" component= {Home}/>\n     <Route exact path = \"/signin\" component= {Signin}/>\n     <Route exact path = \"/signup\" component= {Signup}/>\n     <Route exact path = \"*\" component= {PageNotFound}/>\n   </Switch>  \n   \n   <Footer/>\n   </UserContext.Provider>\n   \n   </Router>\n  );\n}\n\nexport default App;\n","export default {\r\n    apiKey: \"AIzaSyAlA3PNqD8MD314R9-HanlzoZOdCF4Y_3U\",\r\n    authDomain: \"mygitapp-8bf34.firebaseapp.com\",\r\n    databaseURL: \"https://mygitapp-8bf34.firebaseio.com\",\r\n    projectId: \"mygitapp-8bf34\",\r\n    storageBucket: \"mygitapp-8bf34.appspot.com\",\r\n    messagingSenderId: \"643005615313\",\r\n    appId: \"1:643005615313:web:6b9535f97e5161cf6209f0\",\r\n    measurementId: \"G-N34LPYDK6S\"\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}